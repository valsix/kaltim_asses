<? 
/* *******************************************************************************************************
MODUL NAME 			: SIMWEB
FILE NAME 			: UserGroupsBase.php
AUTHOR				: Ridwan Rismanto
VERSION				: 1.0
MODIFICATION DOC	:
DESCRIPTION			: Entity-base class for tabel usergroups implementation
***************************************************************************************************** */

  /***
  * Entity-base class untuk mengimplementasikan tabel usergroups.
  * 
  * @author M Reza Faisal
  * @generated by Entity Generator 5.8.3
  * @generated on 27-Apr-2005,14:15
  ***/
  include_once("../WEB/classes/db/Entity.php");

  class UserGroupsBase extends Entity{ 

	var $query;
    /**
    * Class constructor.
    * @author M Reza Faisal
    **/
    function UserGroupsBase(){
      $this->Entity(); 
    }

    /**
    * Cek apakah operasi insert dapat dilakukan atau tidak 
    * @author M Reza Faisal
    * @return boolean True jika insert boleh dilakukan, false jika tidak.
    **/
    function canInsert(){
      return true;
    }

    /**
    * Insert record ke database. 
    * @author M Reza Faisal
    * @return boolean True jika insert sukses, false jika tidak.
    **/
    function insert(){
      if(!$this->canInsert())
        showMessageDlg("Data UserGroups tidak dapat di-insert",true);
      else{	
	  	$this->setField("USER_GROUP_ID", $this->getNextId("USER_GROUP_ID","user_group"));		
		$str = "
				INSERT INTO user_group (
				   USER_GROUP_ID, NAMA, PEGAWAI_PROSES, 
				   MASTER_PROSES, LIHAT_PROSES, TEMP_LIST, LAST_CREATE_USER, LAST_CREATE_DATE, LAST_CREATE_SATKER,
				   IKK_PROSES, PENGEMBANGAN_SDM_PROSES, POLA_KARIR_PROSES, EVALUASI_KINERJA_PROSES, TUGAS_BELAJAR_PROSES, RENCANA_SUKSESI_PROSES,
				   PENGATURAN_IKK) 
                VALUES(
				  '".$this->getField("USER_GROUP_ID")."',
                  '".$this->getField("NAMA")."',
				  ".$this->getField("PEGAWAI_PROSES").",
				  ".$this->getField("MASTER_PROSES").",
				  ".$this->getField("LIHAT_PROSES").",
				  '".$this->getField("TEMP_LIST")."',				 
				  '".$this->getField("LAST_CREATE_USER")."',
				  ".$this->getField("LAST_CREATE_DATE").",
				  '".$this->getField("LAST_CREATE_SATKER")."',
				  ".$this->getField("IKK_PROSES").",
				  ".$this->getField("PENGEMBANGAN_SDM_PROSES").",
				  ".$this->getField("POLA_KARIR_PROSES").",
				  ".$this->getField("EVALUASI_KINERJA_PROSES").",
				  ".$this->getField("TUGAS_BELAJAR_PROSES").",
				  ".$this->getField("RENCANA_SUKSESI_PROSES").",
				  ".$this->getField("PENGATURAN_IKK")."
                )"; 
		$this->query = $str;
    // echo $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah operasi update dapat dilakukan atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika update dapat dilakukan, false jika tidak.
    **/
    function canUpdate(){
      return true;
    }

    /**
    * Update record. 
    * @author M Reza Faisal
    * @return boolean True jika update sukses, false jika tidak.
    **/
    function update(){
      if(!$this->canUpdate())
        showMessageDlg("Data usergroups tidak dapat diupdate",true);
      else{
		$str = "UPDATE user_group 
                SET 
                  NAMA = '".$this->getField("NAMA")."',
				  PEGAWAI_PROSES = ".$this->getField("PEGAWAI_PROSES").",
				  MASTER_PROSES = ".$this->getField("MASTER_PROSES").",
				  LIHAT_PROSES= ".$this->getField("LIHAT_PROSES").",
				  TEMP_LIST= '".$this->getField("TEMP_LIST")."',
				  LAST_UPDATE_USER	= '".$this->getField("LAST_UPDATE_USER")."',
				  LAST_UPDATE_DATE	= ".$this->getField("LAST_UPDATE_DATE").",
				  LAST_UPDATE_SATKER	= '".$this->getField("LAST_UPDATE_SATKER")."',
				  IKK_PROSES 	= ".$this->getField("IKK_PROSES").",
				  PENGEMBANGAN_SDM_PROSES = ".$this->getField("PENGEMBANGAN_SDM_PROSES").",
				  POLA_KARIR_PROSES = ".$this->getField("POLA_KARIR_PROSES").",
				  EVALUASI_KINERJA_PROSES = ".$this->getField("EVALUASI_KINERJA_PROSES").",
				  TUGAS_BELAJAR_PROSES = ".$this->getField("TUGAS_BELAJAR_PROSES").",
				  RENCANA_SUKSESI_PROSES = ".$this->getField("RENCANA_SUKSESI_PROSES").",
				  PENGATURAN_IKK  = ".$this->getField("PENGATURAN_IKK")."
                WHERE 
                  USER_GROUP_ID = '".$this->getField("USER_GROUP_ID")."'"; 
				  $this->query = $str;
        return $this->execQuery($str);
      }
    }

    /**
    * Cek apakah record dapat dihapus atau tidak. 
    * @author M Reza Faisal
    * @return boolean True jika record dapat dihapus, false jika tidak.
    **/
    function canDelete(){
      return true;
    }

    /**
    * Menghapus record sesuai id-nya. 
    * @author M Reza Faisal
    * @return boolean True jika penghapusan sukses, false jika tidak.
    **/
    function delete(){
      if(!$this->canDelete())
        showMessageDlg("Data usergroups tidak dapat di-hapus",true);
      else{
        $str = "DELETE FROM user_group 
                WHERE 
                  USER_GROUP_ID = '".$this->getField("USER_GROUP_ID")."'"; 
        $this->query = $str;
		return $this->execQuery($str);
      }
    }

    /**
    * Cari record berdasarkan id-nya. 
    * @author M Reza Faisal
    * @param string USER_NAME Id record 
    * @return boolean True jika pencarian sukses, false jika tidak.
    **/
    function selectById($USER_GROUP_ID){
      $str = "SELECT * FROM user_group
              WHERE 
                USER_GROUP_ID = '".$USER_GROUP_ID."'"; 
				
		$this->query = $str;
		
      $this->select($str);
	  if($this->firstRow()) 
        return true; 
      else 
         return false; 
    }

    /** 
    * Cari record berdasarkan array parameter dan limit tampilan 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @param int limit Jumlah maksimal record yang akan diambil 
    * @param int from Awal record yang diambil 
    * @return boolean True jika sukses, false jika tidak 
    **/ 
    function selectByParams($paramsArray=array(),$limit=-1,$from=-1){
      $str = "
				SELECT 
				USER_GROUP_ID, NAMA, PEGAWAI_PROSES, 
				   DUK_PROSES, KGB_PROSES, KP_PROSES, 
				   PENSIUN_PROSES, ANJAB_PROSES, MUTASI_PROSES, HUKUMAN_PROSES, MASTER_PROSES, LIHAT_PROSES,
				   BIDANG_PEMBINAAN, BIDANG_DOKUMENTASI, BIDANG_PENDIDIKAN, BIDANG_MUTASI
				FROM user_group WHERE USER_GROUP_ID IS NOT NULL 
			  "; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key LIKE '%$val%' ";
      }
      $str .= " ORDER BY NAMA";
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }
	
	function selectByParamsMonitoring($paramsArray=array(),$limit=-1,$from=-1, $statement="", $sOrder="ORDER BY A.USER_GROUP_ID"){
	   $str = "
			SELECT A.USER_GROUP_ID, A.NAMA, A.PEGAWAI_PROSES, A.MASTER_PROSES, A.LIHAT_PROSES, A.TEMP_LIST, CASE WHEN A.TEMP_LIST IS NULL OR A.TEMP_LIST = '' THEN 'Semua Menu' ELSE 		                   A.TEMP_LIST END TEMP_LIST_INFO, A.IKK_PROSES, A.PENGEMBANGAN_SDM_PROSES, A.POLA_KARIR_PROSES, A.RENCANA_SUKSESI_PROSES, A.TUGAS_BELAJAR_PROSES,     A.EVALUASI_KINERJA_PROSES, A.PENGATURAN_IKK
			FROM user_group A 
			WHERE 1=1 "; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
      $str .= $statement." ".$sOrder;
	  $this->query = $str;
      return $this->selectLimit($str,$limit,$from); 
    }
	
	function getCountByParamsMonitoring($paramsArray=array(), $varStatement=""){
      $str = "
	  SELECT COUNT(1) AS ROWCOUNT 
	  FROM user_group A 
	  WHERE 1=1 ".$varStatement; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key = '$val' ";
      }
	  $this->query = $str;
      $this->select($str); 
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
	
    /** 
    * Hitung jumlah record berdasarkan parameter (array). 
    * @author M Reza Faisal
    * @param array paramsArray Array of parameter. Contoh array("id"=>"xxx","nama"=>"yyy") 
    * @return long Jumlah record yang sesuai kriteria 
    **/ 
    function getCountByParams($paramsArray=array(), $varStatement=""){
      $str = "SELECT COUNT(USER_GROUP_ID) AS ROWCOUNT FROM user_group WHERE USER_GROUP_ID IS NOT NULL ".$varStatement; 
      while(list($key,$val)=each($paramsArray)){
        $str .= " AND $key LIKE '%$val%' ";
      }
      $this->select($str); 
      if($this->firstRow()) 
        return $this->getField("ROWCOUNT"); 
      else 
         return 0; 
    }
  } 
?>